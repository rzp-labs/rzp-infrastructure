---
default_stages: [pre-commit]
default_language_version:
  node: system
fail_fast: false
repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-json
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-toml
      - id: check-xml
      - id: check-yaml
        args: [--unsafe]
      - id: debug-statements
      - id: detect-private-key
      - id: end-of-file-fixer
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]

  # TypeScript/JavaScript linting and formatting
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v9.0.0
    hooks:
      - id: eslint
        files: \.(js|ts)$
        args: [--fix]
        additional_dependencies:
          - eslint@^9.0.0
          - '@typescript-eslint/eslint-plugin@^7.0.0'
          - '@typescript-eslint/parser@^7.0.0'

  # Prettier for TypeScript/JavaScript formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0
    hooks:
      - id: prettier
        types_or: [javascript, jsx, ts, tsx, json]
        args: [--write]

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: [--strict, -c=.yamllint]

  # Markdown formatting with prettier
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0
    hooks:
      - id: prettier
        types_or: [markdown]
        args: [--write, --prose-wrap=always]

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker

  # Commit message linting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.20.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

# Local hooks for project-specific checks
  - repo: local
    hooks:
      - id: check-no-console
        name: Check for console statements
        entry: 'console\.(log|warn|error|debug|info)'
        language: pygrep
        types: [javascript, typescript]
        exclude: ^(scripts/|tests/|.*\.test\.|.*\.spec\.)

      - id: typescript-check
        name: TypeScript type checking
        entry: bash -c 'cd infrastructure && pnpm run type-check'
        language: system
        files: ^infrastructure/.*\.ts$
        pass_filenames: false

      - id: eslint-check
        name: ESLint check
        entry: bash -c 'cd infrastructure && pnpm run lint'
        language: system
        files: ^infrastructure/.*\.(js|ts)$
        pass_filenames: false

      - id: test-check
        name: Run tests on changed files
        entry: bash -c 'cd infrastructure && pnpm test'
        language: system
        pass_filenames: false
        stages: [pre-push]
        verbose: true

      - id: check-solid-principles
        name: Check file size for SRP
        entry: |
          bash -c 'find infrastructure -name "*.ts" -type f -exec wc -l {} + |
          awk "$1 > 150 {print $2 \" exceeds 150 lines\"}"'
        language: system
        pass_filenames: false
        files: ^infrastructure/.*\.ts$