apiVersion: v1
kind: ServiceAccount
metadata:
  name: vector
  namespace: observability
  labels:
    app.kubernetes.io/name: vector
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vector
  labels:
    app.kubernetes.io/name: vector
rules:
# Read access to pods and logs
- apiGroups: [ "" ]
  resources: [ "pods", "pods/log" ]
  verbs: [ "get", "list", "watch" ]
# Read access to nodes and node metrics
- apiGroups: [ "" ]
  resources: [ "nodes", "nodes/metrics", "nodes/proxy" ]
  verbs: [ "get", "list", "watch" ]
# Read access to namespaces
- apiGroups: [ "" ]
  resources: [ "namespaces" ]
  verbs: [ "get", "list", "watch" ]
# Read access to services and endpoints
- apiGroups: [ "" ]
  resources: [ "services", "endpoints" ]
  verbs: [ "get", "list", "watch" ]
# Read access to deployments, replicasets, and statefulsets
- apiGroups: [ "apps" ]
  resources: [ "deployments", "replicasets", "statefulsets" ]
  verbs: [ "get", "list", "watch" ]
# Read access to ingresses
- apiGroups: [ "networking.k8s.io" ]
  resources: [ "ingresses" ]
  verbs: [ "get", "list", "watch" ]
# Read access to persistent volumes and claims
- apiGroups: [ "" ]
  resources: [ "persistentvolumes", "persistentvolumeclaims" ]
  verbs: [ "get", "list", "watch" ]
# Read access to configmaps and secrets (for service discovery)
- apiGroups: [ "" ]
  resources: [ "configmaps", "secrets" ]
  verbs: [ "get", "list", "watch" ]
# Read access to metrics
- apiGroups: [ "metrics.k8s.io" ]
  resources: [ "nodes", "pods" ]
  verbs: [ "get", "list" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vector
  labels:
    app.kubernetes.io/name: vector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vector
subjects:
- kind: ServiceAccount
  name: vector
  namespace: observability
