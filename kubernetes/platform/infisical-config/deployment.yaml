apiVersion: apps/v1
kind: Deployment
metadata:
  name: infisical
  namespace: infisical
  labels:
    app: infisical
spec:
  replicas: 2
  selector:
    matchLabels:
      app: infisical
  template:
    metadata:
      labels:
        app: infisical
    spec:
      containers:
      - name: infisical
        image: infisical/infisical:latest
        ports:
        - containerPort: 8080
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: DB_CONNECTION_URI
          value: "postgresql://infisical:INFISICAL_DB_PASSWORD_PLACEHOLDER@infisical-postgres-postgresql:5432/infisical"
        - name: REDIS_URL
          value: "redis://:INFISICAL_REDIS_PASSWORD_PLACEHOLDER@infisical-redis-master:6379"
        - name: AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: infisical-secrets
              key: auth-secret
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: infisical-secrets
              key: encryption-key
        - name: SITE_URL
          value: "https://infisical.stg.rzp.one"
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: /api/status
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/status
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: infisical-service
  namespace: infisical
  labels:
    app: infisical
spec:
  selector:
    app: infisical
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: infisical-ingress
  namespace: infisical
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - infisical.stg.rzp.one
    secretName: infisical-tls
  rules:
  - host: infisical.stg.rzp.one
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: infisical-service
            port:
              number: 80
