# Zitadel Database Credentials
apiVersion: secrets.infisical.com/v1alpha1
kind: InfisicalSecret
metadata:
  name: zitadel-db-credentials
  namespace: zitadel
  annotations:
    secrets.infisical.com/auto-reload: "true"
    secrets.infisical.com/auto-restart: "zitadel-postgresql"
spec:
  hostAPI: "https://app.infisical.com/api"
  
  # Authentication
  authentication:
    universalAuth:
      secretsScope:
        projectSlug: "rzp-infra"
        envSlug: "stg"
        secretsPath: "/"
      credentialsRef:
        secretName: infisical-auth-credentials
        secretNamespace: infisical-secrets-system
  
  # Target Kubernetes secret
  managedKubeSecretReferences:
    - secretName: zitadel-db-credentials
      secretNamespace: zitadel
      creationPolicy: "Owner"
      template:
        data:
          db-password: "{{ .zitadel-db-password.Value }}"
          postgres-password: "{{ .zitadel-postgres-password.Value }}"
---
# Zitadel Application Secrets
apiVersion: secrets.infisical.com/v1alpha1
kind: InfisicalSecret
metadata:
  name: zitadel-app-secrets
  namespace: zitadel
  annotations:
    secrets.infisical.com/auto-reload: "true"
    secrets.infisical.com/auto-restart: "zitadel"
spec:
  hostAPI: "https://app.infisical.com/api"
  
  # Authentication
  authentication:
    universalAuth:
      secretsScope:
        projectSlug: "rzp-infra"
        envSlug: "stg"
        secretsPath: "/"
      credentialsRef:
        secretName: infisical-auth-credentials
        secretNamespace: infisical-secrets-system
  
  # Target Kubernetes secret
  managedKubeSecretReferences:
    - secretName: zitadel-app-secrets
      secretNamespace: zitadel
      creationPolicy: "Owner"
      template:
        data:
          master-key: "{{ .zitadel-master-key.Value }}"
---
# Zitadel Auth Proxy Secrets
apiVersion: secrets.infisical.com/v1alpha1
kind: InfisicalSecret
metadata:
  name: zitadel-auth-proxy-secrets
  namespace: zitadel
  annotations:
    secrets.infisical.com/auto-reload: "true"
    secrets.infisical.com/auto-restart: "oauth2-proxy"
spec:
  hostAPI: "https://app.infisical.com/api"
  
  # Authentication
  authentication:
    universalAuth:
      secretsScope:
        projectSlug: "rzp-infra"
        envSlug: "stg"
        secretsPath: "/"
      credentialsRef:
        secretName: infisical-auth-credentials
        secretNamespace: infisical-secrets-system
  
  # Target Kubernetes secret
  managedKubeSecretReferences:
    - secretName: zitadel-auth-proxy-secrets
      secretNamespace: zitadel
      creationPolicy: "Owner"
      template:
        data:
          client-id: "{{ .zitadel-auth-proxy-client-id.Value }}"
          client-secret: "{{ .zitadel-auth-proxy-client-secret.Value }}"
          session-secret: "{{ .zitadel-auth-proxy-secret.Value }}"
