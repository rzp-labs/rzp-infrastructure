---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zitadel-auth-proxy
  namespace: zitadel
  labels:
    app: zitadel-auth-proxy
spec:
  replicas: 0 # Disabled for staging - using basic auth instead
  selector:
    matchLabels:
      app: zitadel-auth-proxy
  template:
    metadata:
      labels:
        app: zitadel-auth-proxy
    spec:
      containers:
        - name: traefik-forward-auth
          image: 'thomseddon/traefik-forward-auth:2.2.0'
          ports:
            - containerPort: 4181
          env:
            - name: LOG_LEVEL
              value: "info"
            - name: AUTH_HOST
              value: "auth.stg.rzp.one"
            - name: COOKIE_DOMAIN
              value: ".stg.rzp.one"
            - name: INSECURE_COOKIE
              value: "false"
            - name: PROVIDERS_OIDC_ISSUER_URL
              value: "https://zitadel.stg.rzp.one"
            - name: PROVIDERS_OIDC_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: zitadel-auth-proxy-secrets
                  key: zitadel-auth-proxy-client-id
            - name: PROVIDERS_OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: zitadel-auth-proxy-secrets
                  key: zitadel-auth-proxy-client-secret
            - name: SECRET
              valueFrom:
                secretKeyRef:
                  name: zitadel-auth-proxy-secrets
                  key: zitadel-auth-proxy-secret
            - name: DEFAULT_ACTION
              value: "auth"
            - name: DEFAULT_PROVIDER
              value: "oidc"
            - name: DOMAIN
              value: "rzp.one"
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
          readinessProbe:
            httpGet:
              path: /_health
              port: 4181
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /_health
              port: 4181
            initialDelaySeconds: 30
            periodSeconds: 30
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
---
apiVersion: v1
kind: Service
metadata:
  name: zitadel-auth-proxy
  namespace: zitadel
  labels:
    app: zitadel-auth-proxy
spec:
  selector:
    app: zitadel-auth-proxy
  ports:
    - {name: http, port: 4181, targetPort: 4181, protocol: TCP}
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: zitadel-auth-proxy-ingress
  namespace: zitadel
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: "zitadel-default-headers@kubernetescrd"
spec:
  ingressClassName: traefik
  tls:
    - {hosts: [auth.stg.rzp.one], secretName: zitadel-auth-proxy-tls}
  rules:
    - {host: auth.stg.rzp.one, http: {paths: [{path: /, pathType: Prefix, backend: {service: {name: zitadel-auth-proxy, port: {number: 4181}}}}]}}
